<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tbl_examine">
    <resultMap id="BaseResultMap" type="com.lemi.msloan.entity.Examine">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="DATE"/>
        <result column="stop_time" property="stopTime" jdbcType="DATE"/>
        <result column="dtxsny" property="dtxsny" jdbcType="VARCHAR"/>
        <result column="ffbj" property="ffbj" jdbcType="VARCHAR"/>
        <result column="is_Insured" property="isInsured" jdbcType="INTEGER"/>
        <result column="unemployment" property="unemployment" jdbcType="INTEGER"/>
        <result column="comping" property="comping" jdbcType="INTEGER"/>
        <result column="changes" property="changes" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="batch" property="batch" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="village" property="village" jdbcType="VARCHAR"/>
        <result column="is_move" property="isMove" jdbcType="INTEGER"/>
        <result column="community_id" property="communityId" jdbcType="INTEGER"/>
        <result column="community_name" property="communityName" jdbcType="VARCHAR"/>
        <result column="house" property="house" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="village_time" property="villageTime" jdbcType="DATE"/>
        <result column="village_age" property="villageAge" jdbcType="INTEGER"/>
        <result column="cd_state" property="cdState" jdbcType="INTEGER"/>
        <result column="un_start" property="unStart" jdbcType="DATE"/>
        <result column="un_end" property="unEnd" jdbcType="DATE"/>
        <result column="stop_type" property="stopType" jdbcType="INTEGER"/>
        <result column="stop_reason" property="stopReason" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="remark1" property="remark1" jdbcType="VARCHAR"/>
        <result column="remark2" property="remark2" jdbcType="VARCHAR"/>
        <result column="remark3" property="remark3" jdbcType="VARCHAR"/>
        <result column="remark4" property="remark4" jdbcType="VARCHAR"/>
        <result column="next_time" property="nextTime" jdbcType="DATE"/>
        <result column="next_out" property="nextOut" jdbcType="DATE"/>
        <result column="time1" property="time1" jdbcType="TIMESTAMP"/>
        <result column="time2" property="time2" jdbcType="TIMESTAMP"/>
        <result column="time3" property="time3" jdbcType="TIMESTAMP"/>
        <result column="time4" property="time4" jdbcType="TIMESTAMP"/>
        <result column="exit_type" property="exitType" jdbcType="INTEGER" />
        <result column="in_time" property="inTime" jdbcType="TIMESTAMP" />
        <result column="exit_time" property="exitTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="BaseResultMapWithAge" type="com.lemi.msloan.entity.Examine" extends="BaseResultMap">
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, start_time, stop_time, dtxsny, ffbj, is_Insured, unemployment, comping, changes, 
    remark, batch, state, id_card, name, gender, birthday, address, village, is_move, 
    community_id, community_name, house, status, time, village_time, village_age,
    cd_state, un_start, un_end, stop_type, stop_reason, phone,
    remark1, remark2, remark3, remark4, next_time,
    next_out, time1, time2, time3, time4, exit_type, in_time, exit_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        from zd_examine
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zd_examine
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lemi.msloan.entity.Examine" keyProperty="id" useGeneratedKeys="true">
    insert into zd_examine (id, start_time, stop_time, 
      dtxsny, ffbj, is_Insured, 
      unemployment, comping, changes, 
      remark, batch, state, 
      id_card, name, gender, 
      birthday, address, village, 
      is_move, community_id, community_name, 
      house, status, time, 
      village_time, village_age, cd_state,
      un_start, un_end, stop_type, stop_reason, phone,
      remark1, remark2, remark3, remark4, next_time,
      next_out, time1, time2, time3, time4, exit_type, in_time, exit_time
      )
    values (#{id,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, #{stopTime,jdbcType=DATE}, 
      #{dtxsny,jdbcType=VARCHAR}, #{ffbj,jdbcType=VARCHAR}, #{isInsured,jdbcType=INTEGER}, 
      #{unemployment,jdbcType=INTEGER}, #{comping,jdbcType=INTEGER}, #{changes,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{batch,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{idCard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{birthday,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, #{village,jdbcType=VARCHAR}, 
      #{isMove,jdbcType=INTEGER}, #{communityId,jdbcType=INTEGER}, #{communityName,jdbcType=VARCHAR}, 
      #{house,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{villageTime,jdbcType=DATE}, #{villageAge,jdbcType=INTEGER}, #{cdState,jdbcType=INTEGER},
      #{unStart,jdbcType=DATE}, #{unEnd,jdbcType=DATE}, #{stopType,jdbcType=INTEGER}, #{stopReason,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, #{remark4,jdbcType=VARCHAR}, #{nextTime,jdbcType=DATE},
      #{nextOut,jdbcType=DATE}, #{time1,jdbcType=TIMESTAMP}, #{time2,jdbcType=TIMESTAMP}, #{time3,jdbcType=TIMESTAMP}, #{time4,jdbcType=TIMESTAMP},
      #{exitType,jdbcType=INTEGER}, #{inTime,jdbcType=TIMESTAMP}, #{exitTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.lemi.msloan.entity.Examine" keyProperty="id"
            useGeneratedKeys="true">
        insert into zd_examine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="stopTime != null">
                stop_time,
            </if>
            <if test="dtxsny != null">
                dtxsny,
            </if>
            <if test="ffbj != null">
                ffbj,
            </if>
            <if test="isInsured != null">
                is_Insured,
            </if>
            <if test="unemployment != null">
                unemployment,
            </if>
            <if test="comping != null">
                comping,
            </if>
            <if test="changes != null">
                changes,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="batch != null">
                batch,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="village != null">
                village,
            </if>
            <if test="isMove != null">
                is_move,
            </if>
            <if test="communityId != null">
                community_id,
            </if>
            <if test="communityName != null">
                community_name,
            </if>
            <if test="house != null">
                house,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="villageTime != null">
                village_time,
            </if>
            <if test="villageAge != null">
                village_age,
            </if>
            <if test="cdState != null">
                cd_state,
            </if>
            <if test="unStart != null">
                un_start,
            </if>
            <if test="unEnd != null">
                un_end,
            </if>
            <if test="stopType != null">
                stop_type,
            </if>
            <if test="stopReason != null">
                stop_reason,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="remark1 != null">
                remark1,
            </if>
            <if test="remark2 != null">
                remark2,
            </if>
            <if test="remark3 != null">
                remark3,
            </if>
            <if test="remark4 != null">
                remark4,
            </if>
            <if test="nextTime != null">
                next_time,
            </if>
            <if test="nextOut != null">
                next_out,
            </if>
            <if test="time1 != null">
                time1,
            </if>
            <if test="time2 != null">
                time2,
            </if>
            <if test="time3 != null">
                time3,
            </if>
            <if test="time4 != null">
                time4,
            </if>
            <if test="exitType != null">
                exit_type,
            </if>
            <if test="inTime != null">
                in_time,
            </if>
            <if test="exitTime != null">
                exit_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=DATE},
            </if>
            <if test="stopTime != null">
                #{stopTime,jdbcType=DATE},
            </if>
            <if test="dtxsny != null">
                #{dtxsny,jdbcType=VARCHAR},
            </if>
            <if test="ffbj != null">
                #{ffbj,jdbcType=VARCHAR},
            </if>
            <if test="isInsured != null">
                #{isInsured,jdbcType=INTEGER},
            </if>
            <if test="unemployment != null">
                #{unemployment,jdbcType=INTEGER},
            </if>
            <if test="comping != null">
                #{comping,jdbcType=INTEGER},
            </if>
            <if test="changes != null">
                #{changes,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="batch != null">
                #{batch,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="village != null">
                #{village,jdbcType=VARCHAR},
            </if>
            <if test="isMove != null">
                #{isMove,jdbcType=INTEGER},
            </if>
            <if test="communityId != null">
                #{communityId,jdbcType=INTEGER},
            </if>
            <if test="communityName != null">
                #{communityName,jdbcType=VARCHAR},
            </if>
            <if test="house != null">
                #{house,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="villageTime != null">
                #{villageTime,jdbcType=DATE},
            </if>
            <if test="villageAge != null">
                #{villageAge,jdbcType=INTEGER},
            </if>
            <if test="cdState != null">
                #{cdState,jdbcType=INTEGER},
            </if>
            <if test="unStart != null">
                #{unStart,jdbcType=DATE},
            </if>
            <if test="unEnd != null">
                #{unEnd,jdbcType=DATE},
            </if>
            <if test="stopType != null">
                #{stopType,jdbcType=INTEGER},
            </if>
            <if test="stopReason != null">
                #{stopReason,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="remark1 != null">
                #{remark1,jdbcType=VARCHAR},
            </if>
            <if test="remark2 != null">
                #{remark2,jdbcType=VARCHAR},
            </if>
            <if test="remark3 != null">
                #{remark3,jdbcType=VARCHAR},
            </if>
            <if test="remark4 != null">
                #{remark4,jdbcType=VARCHAR},
            </if>
            <if test="nextTime != null">
                #{nextTime,jdbcType=DATE},
            </if>
            <if test="nextOut != null">
                #{nextOut,jdbcType=DATE},
            </if>
            <if test="time1 != null">
                #{time1,jdbcType=TIMESTAMP},
            </if>
            <if test="time2 != null">
                #{time2,jdbcType=TIMESTAMP},
            </if>
            <if test="time3 != null">
                #{time3,jdbcType=TIMESTAMP},
            </if>
            <if test="time4 != null">
                #{time4,jdbcType=TIMESTAMP},
            </if>
            <if test="exitType != null">
                #{exitType,jdbcType=INTEGER},
            </if>
            <if test="inTime != null">
                #{inTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exitTime != null">
                #{exitTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lemi.msloan.entity.Examine">
        update zd_examine
        <set>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=DATE},
            </if>
            <if test="stopTime != null">
                stop_time = #{stopTime,jdbcType=DATE},
            </if>
            <if test="dtxsny != null">
                dtxsny = #{dtxsny,jdbcType=VARCHAR},
            </if>
            <if test="ffbj != null">
                ffbj = #{ffbj,jdbcType=VARCHAR},
            </if>
            <if test="isInsured != null">
                is_Insured = #{isInsured,jdbcType=INTEGER},
            </if>
            <if test="unemployment != null">
                unemployment = #{unemployment,jdbcType=INTEGER},
            </if>
            <if test="comping != null">
                comping = #{comping,jdbcType=INTEGER},
            </if>
            <if test="changes != null">
                changes = #{changes,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="batch != null">
                batch = #{batch,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="village != null">
                village = #{village,jdbcType=VARCHAR},
            </if>
            <if test="isMove != null">
                is_move = #{isMove,jdbcType=INTEGER},
            </if>
            <if test="communityId != null">
                community_id = #{communityId,jdbcType=INTEGER},
            </if>
            <if test="communityName != null">
                community_name = #{communityName,jdbcType=VARCHAR},
            </if>
            <if test="house != null">
                house = #{house,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="villageTime != null">
                village_time = #{villageTime,jdbcType=DATE},
            </if>
            <if test="villageAge != null">
                village_age = #{villageAge,jdbcType=INTEGER},
            </if>
            <if test="cdState != null">
                cd_state = #{cdState,jdbcType=INTEGER},
            </if>
            <if test="unStart != null">
                un_start = #{unStart,jdbcType=DATE},
            </if>
            <if test="unEnd != null">
                un_end = #{unEnd,jdbcType=DATE},
            </if>
            <if test="stopType != null">
                stop_type = #{stopType,jdbcType=INTEGER},
            </if>
            <if test="stopReason != null">
                stop_reason = #{stopReason,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="remark1 != null">
                remark1 = #{remark1,jdbcType=VARCHAR},
            </if>
            <if test="remark2 != null">
                remark2 = #{remark2,jdbcType=VARCHAR},
            </if>
            <if test="remark3 != null">
                remark3 = #{remark3,jdbcType=VARCHAR},
            </if>
            <if test="remark4 != null">
                remark4 = #{remark4,jdbcType=VARCHAR},
            </if>
            <if test="nextTime != null">
                next_time = #{nextTime,jdbcType=DATE},
            </if>
            <if test="nextOut != null">
                next_out = #{nextOut,jdbcType=DATE},
            </if>
            <if test="time1 != null">
                time1 = #{time1,jdbcType=TIMESTAMP},
            </if>
            <if test="time2 != null">
                time2 = #{time2,jdbcType=TIMESTAMP},
            </if>
            <if test="time3 != null">
                time3 = #{time3,jdbcType=TIMESTAMP},
            </if>
            <if test="time4 != null">
                time4 = #{time4,jdbcType=TIMESTAMP},
            </if>
            <if test="exitType != null">
                exit_type = #{exitType,jdbcType=INTEGER},
            </if>
            <if test="inTime != null">
                in_time = #{inTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exitTime != null">
                exit_time = #{exitTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lemi.msloan.entity.Examine">
    update zd_examine
    set start_time = #{startTime,jdbcType=DATE},
      stop_time = #{stopTime,jdbcType=DATE},
      dtxsny = #{dtxsny,jdbcType=VARCHAR},
      ffbj = #{ffbj,jdbcType=VARCHAR},
      is_Insured = #{isInsured,jdbcType=INTEGER},
      unemployment = #{unemployment,jdbcType=INTEGER},
      comping = #{comping,jdbcType=INTEGER},
      changes = #{changes,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      batch = #{batch,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR},
      is_move = #{isMove,jdbcType=INTEGER},
      community_id = #{communityId,jdbcType=INTEGER},
      community_name = #{communityName,jdbcType=VARCHAR},
      house = #{house,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      village_time = #{villageTime,jdbcType=DATE},
      village_age = #{villageAge,jdbcType=INTEGER},
      cd_state = #{cdState,jdbcType=INTEGER},
      un_start = #{unStart,jdbcType=DATE},
      un_end = #{unEnd,jdbcType=DATE},
      stop_type = #{stopType,jdbcType=INTEGER},
      stop_reason = #{stopReason,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
       remark1 = #{remark1,jdbcType=VARCHAR},
       remark2 = #{remark2,jdbcType=VARCHAR},
       remark3 = #{remark3,jdbcType=VARCHAR},
       remark4 = #{remark4,jdbcType=VARCHAR},
       next_time = #{nextTime,jdbcType=DATE},
       next_out = #{nextOut,jdbcType=DATE},
       time1 = #{time1,jdbcType=TIMESTAMP},
       time2 = #{time2,jdbcType=TIMESTAMP},
       time3 = #{time3,jdbcType=TIMESTAMP},
       time4 = #{time4,jdbcType=TIMESTAMP},
       exit_type = #{exitType,jdbcType=INTEGER},
       in_time = #{inTime,jdbcType=TIMESTAMP},
       exit_time = #{exitTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findAllExamine" parameterType="com.lemi.msloan.request.ExamineRequest" resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM zd_examine
        <where>
            <if test="state != null">
                AND state = #{state}
            </if>
            <if test="house != null">
                AND house LIKE '%${house}%'
            </if>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="idCard != null">
                AND id_card LIKE '%${idCard}%'
            </if>
            <if test="comping != null">
                AND comping = #{comping}
            </if>
            <if test="age != null">
                AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
            </if>
            <if test="changes != null">
                AND changes = #{changes}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="unemployment != null">
                AND unemployment = #{unemployment}
            </if>
            <if test="isInsured != null">
                AND is_Insured = #{isInsured}
            </if>
            <if test="communityId != null">
                AND community_id = #{communityId}
            </if>
        </where>
        ORDER BY time DESC
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>
    <select id="findAllExamineCount" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        <where>
            <if test="state != null">
                AND state = #{state}
            </if>
            <if test="house != null">
                AND house LIKE '%${house}%'
            </if>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="idCard != null">
                AND id_card LIKE '%${idCard}%'
            </if>
            <if test="comping != null">
                AND comping = #{comping}
            </if>
            <if test="age != null">
                AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
            </if>
            <if test="changes != null">
                AND changes = #{changes}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="unemployment != null">
                AND unemployment = #{unemployment}
            </if>
            <if test="isInsured != null">
                AND is_Insured = #{isInsured}
            </if>
            <if test="communityId != null">
                AND community_id = #{communityId}
            </if>
        </where>
    </select>
    <select id="getByIdCard" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
    SELECT
    count(*)
    FROM
    zd_examine
    WHERE id_card = #{idCard}
  </select>
    <select id="getExamineWillStart" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM zd_examine
        WHERE
        status = 1
        AND
        (
        (gender=1 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 50)
        OR
        (gender=2 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 40)
        )
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
        ORDER BY time DESC
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>
    <select id="getExamineWillStartCount" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        WHERE
        status = 1
        AND
        (
        (gender=1 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 50)
        OR
        (gender=2 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 40)
        )
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
    </select>
    <select id="getExamineWillStop" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM zd_examine
        WHERE
        status = 2
        AND
        (
        (gender=1 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 60)
        OR
        (gender=2 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 50)
        )
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
        ORDER BY time DESC
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>
    <select id="getExamineWillStopCount" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        WHERE
        status = 2
        AND
        (
        (gender=1 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 60)
        OR
        (gender=2 AND TIMESTAMPDIFF(YEAR,DATE_ADD(birthday,INTERVAL -1 MONTH),CURDATE()) >= 50)
        )
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
    </select>
    <select id="getBeanByIdCard" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM
        zd_examine
        WHERE id_card = #{idCard}
        limit 1
    </select>
    <select id="findAgainExamine" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM zd_examine
        WHERE
        (status = 5 OR status = 6)
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
        ORDER BY time DESC
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>
    <select id="findAgainExamineCount" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        WHERE
        (status = 5 OR status = 6)
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
    </select>
    <select id="findUndeterminedExamine" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultMap="BaseResultMapWithAge">
        SELECT
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        FROM zd_examine
        WHERE
        (status = 7 OR status = 8)
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
        ORDER BY time DESC
        <if test="start != null and end != null">
            LIMIT #{start},#{end}
        </if>
    </select>
    <select id="findUndeterminedExamineCount" parameterType="com.lemi.msloan.request.ExamineRequest"
            resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        WHERE
        (status = 7 OR status = 8)
        <if test="house != null">
            AND house LIKE '%${house}%'
        </if>
        <if test="name != null">
            AND name LIKE '%${name}%'
        </if>
        <if test="idCard != null">
            AND id_card LIKE '%${idCard}%'
        </if>
        <if test="comping != null">
            AND comping = #{comping}
        </if>
        <if test="age != null">
            AND TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
        </if>
        <if test="changes != null">
            AND changes = #{changes}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="unemployment != null">
            AND unemployment = #{unemployment}
        </if>
        <if test="isInsured != null">
            AND is_Insured = #{isInsured}
        </if>
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
    </select>

    <select id="getByStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM zd_examine
        WHERE status = 2
    </select>

    <select id="getExitCountByCommunityId" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        WHERE
        status = 4
        <if test="communityId != null">
            AND community_id = #{communityId}
        </if>
        <if test="beginTime != null">
            <![CDATA[  AND exit_time >= #{beginTime}]]>
        </if>
        <if test="endTime != null">
            <![CDATA[  AND exit_time <= #{endTime}]]>
        </if>
        <if test="exitType != null">
            AND exit_type = #{exitType}
        </if>
    </select>
    <select id="getAddedCountByCommunityId" parameterType="com.lemi.msloan.request.ExamineRequest" resultType="int">
        SELECT
        count(*)
        FROM zd_examine
        <where>
            <if test="communityId != null">
                AND community_id = #{communityId}
            </if>
            <if test="beginTime != null">
                <![CDATA[  AND in_time >= #{beginTime}]]>
            </if>
            <if test="endTime != null">
                <![CDATA[  AND in_time <= #{endTime}]]>
            </if>
        </where>
    </select>
</mapper>