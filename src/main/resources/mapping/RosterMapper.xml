<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tbl_roster">
    <resultMap id="BaseResultMap" type="com.lemi.msloan.entity.Roster">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="village" property="village" jdbcType="VARCHAR"/>
        <result column="is_move" property="isMove" jdbcType="INTEGER"/>
        <result column="community_id" property="communityId" jdbcType="INTEGER"/>
        <result column="community_name" property="communityName" jdbcType="VARCHAR"/>
        <result column="house" property="house" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="examine_id" property="examineId" jdbcType="INTEGER"/>
        <result column="village_time" property="villageTime" jdbcType="DATE"/>
        <result column="village_age" property="villageAge" jdbcType="INTEGER"/>
        <result column="cd_state" property="cdState" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMapWithAge" type="com.lemi.msloan.entity.Roster" extends="BaseResultMap">
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMapWithExamine" type="com.lemi.msloan.entity.Roster" extends="BaseResultMapWithAge">
        <association property="examine" column="examine_id" javaType="com.lemi.msloan.entity.Examine"
                     select="tbl_examine.selectByPrimaryKey"></association>
    </resultMap>
    <sql id="Base_Column_List">
    id, id_card, name, gender, birthday, address, village, is_move, community_id, community_name, 
    house, status, remark, time, examine_id, village_time, village_age, cd_state
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from zd_roster
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zd_roster
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lemi.msloan.entity.Roster"  keyProperty="id"
            useGeneratedKeys="true">
    insert into zd_roster (id, id_card, name, 
      gender, birthday, address, 
      village, is_move, community_id, 
      community_name, house, status, 
      remark, time, examine_id, village_time, village_age, cd_state)
    values (#{id,jdbcType=INTEGER}, #{idCard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{address,jdbcType=VARCHAR},
      #{village,jdbcType=VARCHAR}, #{isMove,jdbcType=INTEGER}, #{communityId,jdbcType=INTEGER}, 
      #{communityName,jdbcType=VARCHAR}, #{house,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{examineId,jdbcType=INTEGER}, #{villageTime,jdbcType=DATE}, #{villageAge,jdbcType=INTEGER}, #{cdState,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.lemi.msloan.entity.Roster"  keyProperty="id"
            useGeneratedKeys="true">
        insert into zd_roster
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="examineId != null">
                examine_id,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="village != null">
                village,
            </if>
            <if test="isMove != null">
                is_move,
            </if>
            <if test="communityId != null">
                community_id,
            </if>
            <if test="communityName != null">
                community_name,
            </if>
            <if test="house != null">
                house,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="examineId != null">
                examine_id,
            </if>
            <if test="villageTime != null">
                village_time,
            </if>
            <if test="villageAge != null">
                village_age,
            </if>
            <if test="cdState != null">
                cd_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="examineId != null">
                #{examineId,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="village != null">
                #{village,jdbcType=VARCHAR},
            </if>
            <if test="isMove != null">
                #{isMove,jdbcType=INTEGER},
            </if>
            <if test="communityId != null">
                #{communityId,jdbcType=INTEGER},
            </if>
            <if test="communityName != null">
                #{communityName,jdbcType=VARCHAR},
            </if>
            <if test="house != null">
                #{house,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="examineId != null">
                #{examineId,jdbcType=INTEGER},
            </if>
            <if test="villageTime != null">
                #{villageTime,jdbcType=DATE},
            </if>
            <if test="villageAge != null">
                #{villageAge,jdbcType=INTEGER},
            </if>
            <if test="cdState != null">
                #{cdState,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lemi.msloan.entity.Roster">
        update zd_roster
        <set>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="examineId != null">
                examine_id = #{examineId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="village != null">
                village = #{village,jdbcType=VARCHAR},
            </if>
            <if test="isMove != null">
                is_move = #{isMove,jdbcType=INTEGER},
            </if>
            <if test="communityId != null">
                community_id = #{communityId,jdbcType=INTEGER},
            </if>
            <if test="communityName != null">
                community_name = #{communityName,jdbcType=VARCHAR},
            </if>
            <if test="house != null">
                house = #{house,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="examineId != null">
                examine_id = #{examineId,jdbcType=INTEGER},
            </if>
            <if test="villageTime != null">
                village_time = #{villageTime,jdbcType=DATE},
            </if>
            <if test="villageAge != null">
                village_age = #{villageAge,jdbcType=INTEGER},
            </if>
            <if test="cdState != null">
                cd_state = #{cdState,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lemi.msloan.entity.Roster">
    update zd_roster
    set id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR},
      is_move = #{isMove,jdbcType=INTEGER},
      community_id = #{communityId,jdbcType=INTEGER},
      community_name = #{communityName,jdbcType=VARCHAR},
      house = #{house,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      examine_id = #{examineId,jdbcType=INTEGER},
      village_time = #{villageTime,jdbcType=DATE},
      village_age = #{villageAge,jdbcType=INTEGER},
      cd_state = #{cdState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getByIdCard" parameterType="com.lemi.msloan.request.RosterRequest" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zd_roster
        where id_card = #{idCard}
        limit 1
    </select>

    <select id="selectRoster" parameterType="com.lemi.msloan.request.RosterRequest" resultMap="BaseResultMapWithAge">
        select
        <include refid="Base_Column_List"/>
        , TIMESTAMPDIFF(YEAR,birthday,CURDATE()) as age
        from zd_roster
        <where>

            <if test="idCard != null">
                and id_card like '%${idCard}%'
            </if>
            <if test="name != null">
                and name like '%${name}%'
            </if>
            <if test="communityId != null">
                and community_id = #{communityId}
            </if>
            <if test="isMove != null">
                and is_move = #{isMove}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="age != null">
                and TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
            </if>
        </where>
        order by time desc
        <if test="start != null and end != null">
            limit #{start},#{end}
        </if>
    </select>
    <select id="selectRosterCount" parameterType="com.lemi.msloan.request.RosterRequest" resultType="int">
        select
        count(*)
        from zd_roster
        <where>
            <if test="idCard != null">
                and id_card like '%${idCard}%'
            </if>
            <if test="name != null">
                and name like '%${name}%'
            </if>
            <if test="communityId != null">
                and community_id = #{communityId}
            </if>
            <if test="isMove != null">
                and is_move = #{isMove}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="age != null">
                and TIMESTAMPDIFF(YEAR,birthday,CURDATE()) = #{age}
            </if>
        </where>
    </select>

    <select id="getByExamineId" parameterType="com.lemi.msloan.request.RosterRequest" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM zd_roster
        WHERE
        examine_id = #{examineId}
        limit 1
    </select>
</mapper>